<?xml version="1.0" encoding="utf-8"?>
<!-- Do not remove this test for UTF-8: if ??? doesn?t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->
<package xmlns="http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd">
  <metadata>
    <!-- Read this before publishing packages to chocolatey.org: https://github.com/chocolatey/chocolatey/wiki/CreatePackages -->
    <id>terraform</id>
    <title>Terraform</title>
    <version>0.7.0-rc3</version>
    <authors>Mitchell Hashimoto, HashiCorp</authors>
    <owners>James Toyer</owners>
    <summary>Terraform is a tool for building, changing, and versioning infrastructure safely and efficiently. Terraform can manage existing and popular service providers as well as custom in-house solutions.</summary>
    <description>
Terraform is a tool for building, changing, and versioning infrastructure safely and efficiently. Terraform can manage existing and popular service providers as well as custom in-house solutions.

The key features of Terraform are:

* **Infrastructure as Code**: Infrastructure is described using a high-level configuration syntax. This allows a blueprint of your datacenter to be versioned and treated as you would any other code. Additionally, infrastructure can be shared and re-used.
* **Execution Plans**: Terraform has a "planning" step where it generates an *execution plan*. The execution plan shows what Terraform will do when you call apply. This lets you avoid any surprises when Terraform manipulates infrastructure.
* **Resource Graph**: Terraform builds a graph of all your resources, and parallelizes the creation and modification of any non-dependent resources. Because of this, Terraform builds infrastructure as efficiently as possible, and operators get insight into dependencies in their infrastructure.
* **Change Automation**: Complex changesets can be applied to your infrastructure with minimal human interaction. With the previously mentioned execution plan and resource graph, you know exactly what Terraform will change and in what order, avoiding many possible human errors.

For more information, see the [introduction section](http://www.terraform.io/intro) of the Terraform website.
    </description>
    <releaseNotes>
## 0.7 (Unreleased)

BACKWARDS INCOMPATIBILITIES / NOTES:

 * Terraform's built-in plugins are now distributed as part of the main Terraform binary, and use the go-plugin framework. Overrides are still available using separate binaries, but will need recompiling against Terraform 0.7.
 * The `terraform plan` command no longer persists state. This makes the command much safer to run, since it is now side-effect free. The `refresh` and `apply` commands still persist state to local and remote storage. Any automation that assumes that `terraform plan` persists state will need to be reworked to explicitly call `terraform refresh` to get the equivalent side-effect. (The `terraform plan` command no longer has the `-state-out` or `-backup` flags due to this change.)
 * The `concat()` interpolation function can no longer be used to join strings.
 * Quotation marks may no longer be escaped in HIL expressions [GH-7201]
 * `openstack_networking_subnet_v2` now defaults to turning DHCP on.
 * `aws_elb` now defaults `cross_zone_load_balancing` to `true`
 * `resource_aws_instance`: EC2 Classic users may continue to use
   `security_groups` to reference Security Groups by their `name`. Users who are
   managing Instances inside VPCs will need to use `vpc_security_group_ids` instead, 
   and reference the security groups by their `id`. 
   Ref https://github.com/hashicorp/terraform/issues/6416#issuecomment-219145065
 * Lists materialized using splat syntax, for example `aws_instance.foo.*.id` are now ordered by the count index rather than lexographically sorted. If this produces a large number of undesirable differences, you can use the new `sort()` interpolation function to produce the previous behaviour.
 * `aws_kinesis_firehose_delivery_stream`: AWS Kinesis Firehose has been refactored to support Redshift as a destination in addition to S3. As a result, the configuration has changed and users will need to update their configuration to match the new `s3_configuration` block. Checkout the documentaiton on [AWS Kinesis Firehose](http://localhost:4567/docs/providers/aws/r/kinesis_firehose_delivery_stream.html) for more information [GH-7375]
 * `aws_route53_record`: `latency_routing_policy`, `geolocation_routing_policy`, and `failover_routing_policy` block options have been added. With these additions weâ€™ve renamed the `weight` attribute to `weighted_routing_policy`, and it has changed from a string to a block to match the others. Please see the updated documentation on using `weighted_routing_policy`:  https://www.terraform.io/docs/providers/aws/r/route53_record.html . [GH-6954]
 * You now access the values of maps using the syntax `var.map["key"]` or the `lookup` function instead of `var.map.key`.
 * Outputs on `terraform_remote_state` resources are now top level attributes rather than inside the `output` map. In order to access outputs, use the syntax: `terraform_remote_state.name.outputname`. Currently outputs cannot be named `config` or `backend`.
 * `azurerm_dns_cname_record` now accepts a single record rather than a list of records
 * `aws_db_instance` now defaults `publicly_accessible` to false
 * `openstack_fw_policy_v1` now correctly applies rules in the order they are specified. Upon the next apply, current rules might be re-ordered.
 * `atlas_artifact` resource has be depracated. Please use the new `atlas_artifact` Data Source
 * The `member` attribute of `openstack_lb_pool_v1` has been deprecated. Please ue the new `openstack_lb_member_v1` resource.

FEATURES:

 * **Data sources** are a new kind of primitive in Terraform. Attributes for data sources are refreshed and available during the planning stage. [GH-6598]
 * **Lists and maps** can now be used as first class types for variables and may also be passed between modules. [GH-6322]
 * **State management CLI commands** provide a variety of state manipulation functions for advanced use cases. This should be used where possible instead of manually modifying state files. [GH-5811]
 * **State Import** allows a way to import existing resources into Terraform state for many types of resource. Initial coverage of AWS is quite high, and it is straightforward to add support for new resources.
 
 * **New Command:** `terraform state` to provide access to a variety of state manipulation functions [GH-5811]
 * **New Option:** `terraform output` now supports the `-json` flag to print a machine-readable representation of outputs [GH-7608]
 * **New Data Source:** `aws_ami` [GH-6911]
 * **New Data Source:** `aws_availability_zones` [GH-6805]
 * **New Data Source:** `aws_iam_policy_document` [GH-6881]
 * **New Data Source:** `aws_s3_bucket_object` [GH-6946]
 * **New Data Source:** `atlas_artifact` [GH-7419]
 * **New Interpolation Function:** `sort` [GH-7128]
 * **New Interpolation Function:** `distinct` [GH-7174]
 * **New Provider:** `grafana` [GH-6206]
 * **New Provider:** `logentries` [GH-7067]
 * **New Provider:** `scaleway` [GH-7331]
 * **New Provider:** `random` - allows generation of random values without constantly generating diffs [GH-6672]
 * **New Remote State Provider:** - `gcs` - Google Cloud Storage [GH-6814]
 * **New Remote State Provider:** - `azure` - Microsoft Azure Storage [GH-7064]
 * **New Resource:** `aws_elb_attachment` [GH-6879]
 * **New Resource:** `aws_elastictranscoder_preset` [GH-6965]
 * **New Resource:** `aws_elastictranscoder_pipeline` [GH-6965]
 * **New Resource:** `aws_iam_group_policy_attachment` [GH-6858]
 * **New Resource:** `aws_iam_role_policy_attachment` [GH-6858]
 * **New Resource:** `aws_iam_user_policy_attachment` [GH-6858]
 * **New Resource:** `aws_rds_cluster_parameter_group` [GH-5269]
 * **New Resource:** `aws_spot_fleet_request` [GH-7243]
 * **New Resource:** `aws_ses_active_receipt_rule_set` [GH-5387]
 * **New Resource:** `aws_ses_receipt_filter` [GH-5387]
 * **New Resource:** `aws_ses_receipt_rule` [GH-5387]
 * **New Resource:** `aws_ses_receipt_rule_set` [GH-5387]
 * **New Resource:** `aws_simpledb_domain` [GH-7600]
 * **New Resource:** `openstack_blockstorage_volume_v2` [GH-6693]
 * **New Resource:** `openstack_lb_loadbalancer_v2` [GH-7012]
 * **New Resource:** `openstack_lb_listener_v2` [GH-7012]
 * **New Resource:** `openstack_lb_pool_v2` [GH-7012]
 * **New Resource:** `openstack_lb_member_v2` [GH-7012]
 * **New Resource:** `openstack_lb_monitor_v2` [GH-7012]
 * **New Resource:** `vsphere_virtual_disk` [GH-6273]
 * **New Resource:** `github_repository_collaborator` [GH-6861]
 * **New Resource:** `azurerm_virtual_machine_scale_set` [GH-6711]
 * **New Resource:** `datadog_timeboard` [GH-6900]
 * **New Resource:** `digitalocean_tag` [GH-7500]
 * **New Resource:** `digitalocean_volume` [GH-7560]
 * core: Tainted resources now show up in the plan and respect dependency ordering [GH-6600]
 * core: The `lookup` interpolation function can now have a default fall-back value specified [GH-6884]
 * core: The `terraform plan` command no longer persists state. [GH-6811]

IMPROVEMENTS:

 * core: The `jsonencode` interpolation function now supports encoding lists and maps [GH-6749]
 * core: Add the ability for resource definitions to mark attributes as "sensitive" which will omit them from UI output. [GH-6923]
 * core: Support `.` in map keys [GH-7654]
 * provider/aws: Add `dns_name` to `aws_efs_mount_target` [GH-7428]
 * provider/aws: Add `option_settings` to `aws_db_option_group` [GH-6560]
 * provider/aws: Add more explicit support for Skipping Final Snapshot in RDS Cluster [GH-6795]
 * provider/aws: Add support for S3 Bucket Acceleration [GH-6628]
 * provider/aws: Add support for `kms_key_id` to `aws_db_instance` [GH-6651]
 * provider/aws: Specifying more than one health check on an `aws_elb` fails with an error prior to making an API request [GH-7489]
 * provider/aws: Add support to `aws_redshift_cluster` for `iam_roles` [GH-6647]
 * provider/aws: SQS use raw policy string if compact fails [GH-6724]
 * provider/aws: Set default description to "Managed by Terraform" [GH-6104]
 * provider/aws: Support for Redshift Cluster encryption using a KMS key [GH-6712]
 * provider/aws: Support tags for AWS redshift cluster [GH-5356]
 * provider/aws: Add `iam_arn` to aws_cloudfront_origin_access_identity [GH-6955]
 * provider/aws: Add `cross_zone_load_balancing` on `aws_elb` default to true [GH-6897]
 * provider/aws: Add support for `character_set_name` to `aws_db_instance` [GH-4861]
 * provider/aws: Add support for DB parameter group with RDS Cluster Instances (Aurora) [GH-6865]
 * provider/aws: Add `name_prefix` to `aws_iam_instance_profile` and `aws_iam_role` [GH-6939]
 * provider/aws: Allow authentication &amp; credentials validation for federated IAM Roles and EC2 instance profiles [GH-6536]
 * provider/aws: Rename parameter_group_name to db_cluster_parameter_group_name [GH-7083]
 * provider/aws: Retry RouteTable Route/Assocation creation [GH-7156]
 * provider/aws: `delegation_set_id` conflicts w/ `vpc_id` in `aws_route53_zone` as delegation sets can only be used for public zones [GH-7213]
 * provider/aws: Support Elastic Beanstalk scheduledaction [GH-7376]
 * provider/aws: Add support for NewInstancesProtectedFromScaleIn to `aws_autoscaling_group` [GH-6490]
 * provider/aws: Added support for `snapshot_identifier` parameter in aws_rds_cluster [GH-7158]
 * provider/aws: Add inplace edit/update DB Security Group Rule Ingress [GH-7245]
 * provider/aws: Added support for redshift destination to firehose delivery streams [GH-7375]
 * provider/aws: Allow `aws_redshift_security_group` ingress rules to change [GH-5939]
 * provider/aws: Add support for `encryption` and `kms_key_id` to `aws_ami` [GH-7181]
 * provider/aws: AWS prefix lists to enable security group egress to a VPC Endpoint [GH-7511]
 * provider/aws: Retry creation of IAM role depending on new IAM user [GH-7324]
 * provider/aws: Allow `port` on `aws_db_instance` to be updated [GH-7441]
 * provider/azurerm: Add support for EnableIPForwarding to `azurerm_network_interface` [GH-6807]
 * provider/azurerm: Add support for exporting the `azurerm_storage_account` access keys [GH-6742]
 * provider/azurerm: The Azure SDK now exposes better error messages [GH-6976]
 * provider/azurerm: `azurerm_dns_zone` now returns `name_servers` [GH-7434]
 * provider/clc: Add support for hyperscale and bareMetal server types and package installation
 * provider/clc: Fix optional server password [GH-6414]
 * provider/cloudstack: Add support for affinity groups to `cloudstack_instance` [GH-6898]
 * provider/cloudstack: Enable swapping of ACLs without having to rebuild the network tier [GH-6741]
 * provider/cloudstack: Improve ACL swapping [GH-7315]
 * provider/datadog: Add support for 'require full window' and 'locked' [GH-6738]
 * provider/docker: Docker Container DNS Setting Enhancements [GH-7392]
 * provider/docker: Add `destroy_grace_seconds` option to stop container before delete [GH-7513]
 * provider/fastly: Add support for Cache Settings [GH-6781]
 * provider/fastly: Add support for Service Request Settings on `fastly_service_v1` resources [GH-6622]
 * provider/fastly: Add support for custom VCL configuration [GH-6662]
 * provider/google: Support optional uuid naming for Instance Template [GH-6604]
 * provider/openstack: Add support for client certificate authentication [GH-6279]
 * provider/openstack: Allow Neutron-based Floating IP to target a specific tenant [GH-6454] 
 * provider/openstack: Enable DHCP By Default [GH-6838]
 * provider/openstack: Implement fixed_ip on Neutron floating ip allocations [GH-6837] 
 * provider/openstack: Increase timeouts for image resize, subnets, and routers [GH-6764]
 * provider/openstack: Add `lb_provider` argument to `lb_pool_v1` resource [GH-6919]
 * provider/openstack: Enforce `ForceNew` on Instance Block Device [GH-6921]
 * provider/openstack: Can now stop instances before destroying them [GH-7184]
 * provider/openstack: Disassociate LBaaS v1 Monitors from Pool Before Deletion [GH-6997]
 * provider/triton: add `triton_machine` `domain names` [GH-7149]
 * provider/vsphere: Add support for `controller_type` to `vsphere_virtual_machine` [GH-6785]
 * provider/vsphere: Fix bug with `vsphere_virtual_machine` wait for ip [GH-6377]
 * provider/vsphere: Virtual machine update disk [GH-6619]
 * provider/vsphere: `vsphere_virtual_machine` adding controller creation logic [GH-6853]
 * provider/vsphere: `vsphere_virtual_machine` added support for `mac address` on `network_interface` [GH-6966]
 * provider/vsphere: Enhanced `vsphere` logging capabilities [GH-6893]
 * provider/vsphere: Add DiskEnableUUID option to `vsphere_virtual_machine` [GH-7088]
 * provider/vsphere: Virtual Machine and File resources handle Read errors properley [GH-7220]
 * provider/vsphere: set uuid as `vsphere_virtual_machine` output [GH-4382]
 * provider/vsphere: Add support for `keep_on_remove` to `vsphere_virtual_machine` [GH-7169]
 * provider/vsphere: Add support for additional `vsphere_virtial_machine` SCSI controller types [GH-7525]
 * provisioner/file: File provisioners may now have file content set as an attribute [GH-7561]
 
BUG FIXES:

 * core: Correct the previous fix for a bug causing "attribute not found" messages during destroy, as it was insufficient [GH-6599]
 * core: Fix issue causing syntax errors interpolating count attribute when value passed between modules [GH-6833]
 * core: Fix "diffs didn't match during apply" error for computed sets [GH-7205]
 * core: Fix issue where `terraform init .` would truncate existing files [GH-7273]
 * core: Don't compare diffs between maps with computed values [GH-7249]
 * core: Don't copy existing files over themselves when fetching modules [GH-7273]
 * core: Always increment the state serial number when upgrading the version [GH-7402]
 * core: Fix a crash during eval when we're upgrading an empty state [GH-7403]
 * core: Honor the `-state-out` flag when applying with a plan file [GH-7443]
 * core: Fix a panic when a `terraform_remote_state` data source doesn't exist [GH-7464]
 * core: Fix issue where `ignore_changes` caused incorrect diffs on dependent resources [GH-7563]
 * provider/aws: Manual changes to `aws_codedeploy_deployment_group` resources are now detected [GH-7530]
 * provider/aws: Changing keys in `aws_dynamodb_table` correctly force new resources [GH-6829]
 * provider/aws: Fix a bug where CloudWatch alarms are created repeatedly if the user does not have permission to use the the DescribeAlarms operation [GH-7227]
 * provider/aws: Fix crash in `aws_elasticache_parameter_group` occuring following edits in the console [GH-6687]
 * provider/aws: Fix issue reattaching a VPN gateway to a VPC [GH-6987]
 * provider/aws: Fix issue with Root Block Devices and encrypted flag in Launch Configurations [GH-6512]
 * provider/aws: If more ENIs are attached to `aws_instance`, the one w/ DeviceIndex `0` is always used in context of `aws_instance` (previously unpredictable) [GH-6761]
 * provider/aws: Handle spurious failures in resourceAwsSecurityGroupRuleRead [GH-7377]
 * provider/aws: Make 'stage_name' required in api_gateway_deployment [GH-6797]
 * provider/aws: Mark Lambda function as gone when it's gone [GH-6924]
 * provider/aws: Trim trailing `.` from `name` in `aws_route53_record` resources to prevent spurious diffs [GH-6592]
 * provider/aws: Update Lambda functions on name change [GH-7081]
 * provider/aws: Updating state when `aws_sns_topic_subscription` is missing [GH-6629]
 * provider/aws: `aws_codedeploy_deployment_group` panic when setting `on_premises_instance_tag_filter` [GH-6617]
 * provider/aws: `aws_db_instance` now defaults `publicly_accessible` to false [GH-7117]
 * provider/aws: `aws_opsworks_application.app_source` SSH key is write-only [GH-6649]
 * provider/aws: fix Elastic Beanstalk `cname_prefix` continual plans [GH-6653]
 * provider/aws: Bundle IOPs and Allocated Storage update for DB Instances [GH-7203]
 * provider/aws: Fix case when instanceId is absent in network interfaces [GH-6851]
 * provider/aws: fix aws_security_group_rule refresh [GH-6730]
 * provider/aws: Fix issue with Elastic Beanstalk and invalid settings [GH-7222]
 * provider/aws: Fix issue where aws_app_cookie_stickiness_policy fails on destroy if LoadBalancer doesn't exist [GH-7166]
 * provider/aws: Stickiness Policy exists, but isn't assigned to the ELB [GH-7188]
 * provider/aws: Fix issue with `manage_bundler` on `aws_opsworks_layers` [GH-7219]
 * provider/aws: Set Elastic Beanstalk stack name back to state [GH-7445]
 * provider/aws: Allow recreation of VPC Peering Connection when state is rejected [GH-7466]
 * provider/aws: Remove EFS File System from State when NotFound [GH-7437]
 * provider/aws: `aws_customer_gateway` refreshing from state on deleted state [GH-7482]
 * provider/aws: Retry finding `aws_route` after creating it [GH-7463]
 * provider/aws: Refresh CloudWatch Group from state on 404 [GH-7576]
 * provider/aws: Adding in additional retry logic due to latency with delete of `db_option_group` [GH-7312]
 * provider/aws: Safely get ELB values [GH-7585]
 * provider/azurerm: Fixes terraform crash when using SSH keys with `azurerm_virtual_machine` [GH-6766]
 * provider/azurerm: Fix a bug causing 'diffs do not match' on `azurerm_network_interface` resources [GH-6790]
 * provider/azurerm: Normalizes `availability_set_id` casing to avoid spurious diffs in `azurerm_virtual_machine` [GH-6768]
 * provider/azurerm: Add support for storage container name validation [GH-6852]
 * provider/azurerm: Remove storage containers and blobs when storage accounts are not found [GH-6855]
 * provider/azurerm: `azurerm_virtual_machine` fix `additional_unattend_rm` Windows config option [GH-7105]
 * provider/azurerm: Fix `azurerm_virtual_machine` windows_config [GH-7123]
 * provider/azurerm: `azurerm_dns_cname_record` can create CNAME records again [GH-7113]
 * provider/azurerm: `azurerm_network_security_group` now waits for the provisioning state of `ready` before proceeding [GH-7307]
 * provider/azurerm: `computer_name` is now required for `azurerm_virtual_machine` resources [GH-7308]
 * provider/azurerm: destroy azurerm_virtual_machine OS Disk VHD on deletion [GH-7584]
 * provider/azurerm: catch `azurerm_template_deployment` erroring silently [GH-7644]
 * provider/azurerm: changing the name of an `azurerm_virtual_machine` now forces a new resource [GH-7646]
 * provider/cloudflare: Fix issue upgrading CloudFlare Records created before v0.6.15 [GH-6969]
 * provider/cloudstack: Fix using `cloudstack_network_acl` within a project [GH-6743]
 * provider/digitalocean: Stop `digitocean_droplet` forcing new resource on uppercase region [GH-7044]
 * provider/digitalocean: Reassign Floating IP when droplet changes [GH-7411]
 * provider/google: Fix a bug causing an error attempting to delete an already-deleted `google_compute_disk` [GH-6689]
 * provider/mysql: Specifying empty provider credentials no longer causes a panic [GH-7211]
 * provider/openstack: Reassociate Floating IP on network changes [GH-6579]
 * provider/openstack: Ensure CIDRs Are Lower Case [GH-6864]
 * provider/openstack: Rebuild Instances On Network Changes [GH-6844]
 * provider/openstack: Firewall rules are applied in the correct order [GH-7194]
 * provider/openstack: Fix Security Group EOF Error when Adding / Removing Multiple Groups [GH-7468]
 * provider/vsphere: `gateway` and `ipv6_gateway` are now read from `vsphere_virtual_machine` resources [GH-6522]
 * provider/vsphere: `ipv*_gateway` parameters won't force a new `vsphere_virtual_machine` [GH-6635]
 * provider/vsphere: adding a `vsphere_virtual_machine` migration [GH-7023]
 * provider/vsphere: Don't require vsphere debug paths to be set [GH-7027]
 * provider/vsphere: Fix bug where `enable_disk_uuid` was not set on `vsphere_virtual_machine` resources [GH-7275]
 * provider/vsphere: Make `vsphere_virtual_machine` `product_key` optional [GH-7410]
 * provider/vsphere: Refreshing devices list after adding a disk or cdrom controller [GH-7167]
 * provider/vsphere: `vsphere_virtual_machine` no longer has to be powered on to delete [GH-7206]
 * provisioner/remote-exec: Properly seed random script paths so they are not deterministic across runs [GH-7413]


## Previous Releases
For more information on previous releases, check out the changelog on [GitHub](https://github.com/hashicorp/terraform/blob/v0.7.0-rc3/CHANGELOG.md).
    </releaseNotes>
    <projectUrl>http://www.terraform.io</projectUrl>
    <tags>terraform</tags>
    <copyright>HashiCorp 2015-2016</copyright>
    <licenseUrl>https://github.com/hashicorp/terraform/blob/master/LICENSE</licenseUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <!-- Important note about https://cdn.rawgit.com: Files are cached permanently after the first request. Use commit URLs when updating the icon. -->
    <iconUrl>https://cdn.rawgit.com/jamestoyer/chocolatey-packages/c98f82fc306d8e204546d890aad96b49f23b7539/terraform/icons/terraform.png</iconUrl>
    <!--<dependencies>
      <dependency id="" version="" />
    </dependencies>-->
  </metadata>
  <files>
    <file src="tools\**" target="tools" />
  </files>
</package>
