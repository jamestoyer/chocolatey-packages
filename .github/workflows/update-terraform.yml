name: Update Terraform

on:
  pull_request:
    branches:
      - develop
  push:
    branches:
      - develop
    paths-ignore:
      - .github/**

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install AU dependencies
        uses: crazy-max/ghaction-chocolatey@v3.0.0
        with:
          args: install Chocolatey-AU wormies-au-helpers

      - name: Update Terraform
        working-directory: ${{ github.workspace }}/terraform
        run: .\update.ps1

      - name: Check for changes
        id: changes
        env:
          # BRANCH_NAME: ${{ github.ref_name }}
          BRANCH_NAME: "feature/auto-updating"
        run: |
          git fetch --depth=1
          git checkout $env:BRANCH_NAME

          $git_dirty=$(git diff)
          if ($git_dirty.Count -eq 0) {
            echo "git_dirty=false" >> $env:GITHUB_OUTPUT
          } else {
            echo "git_dirty=true" >> $env:GITHUB_OUTPUT
          }

      - name: Save Chocolatey packages
        if: ${{ steps.changes.outputs.git_dirty }}
        uses: actions/upload-artifact@v4
        with:
          name: terraform
          path: "${{ github.workspace }}\\terraform\\*.nupkg"

      - name: Commit and push changes
        if: ${{ steps.changes.outputs.git_dirty }}
        env:
          COMMIT_MESSAGE: "Update Terraform Chocolatey packages"
          COMMIT_AUTHOR: "${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>"
          COMMIT_USER_NAME: "github-actions[bot]"
          COMMIT_USER_EMAIL: "41898282+github-actions[bot]@users.noreply.github.com"
        run: |
          echo "COMMIT_USER_NAME: $env:COMMIT_USER_NAME";
          echo "COMMIT_USER_EMAIL: $env:COMMIT_USER_EMAIL";
          echo "COMMIT_MESSAGE: $env:COMMIT_MESSAGE";
          echo "COMMIT_AUTHOR: $env:COMMIT_AUTHOR";

          git add .
          git -c user.name="$env:COMMIT_USER_NAME" -c user.email="$env:COMMIT_USER_EMAIL" commit -m "$env:COMMIT_MESSAGE" --author="env:$COMMIT_AUTHOR"
          # git push -u origin ${{ github.ref_name }}
          echo ${{ github.ref_name }}
          git push -u origin feature/auto-updating
